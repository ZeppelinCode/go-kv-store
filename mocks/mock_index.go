// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ZeppelinCode/go-kv-store/src/dbs (interfaces: Index)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIndex is a mock of Index interface
type MockIndex struct {
	ctrl     *gomock.Controller
	recorder *MockIndexMockRecorder
}

// MockIndexMockRecorder is the mock recorder for MockIndex
type MockIndexMockRecorder struct {
	mock *MockIndex
}

// NewMockIndex creates a new mock instance
func NewMockIndex(ctrl *gomock.Controller) *MockIndex {
	mock := &MockIndex{ctrl: ctrl}
	mock.recorder = &MockIndexMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIndex) EXPECT() *MockIndexMockRecorder {
	return m.recorder
}

// GetPositionOf mocks base method
func (m *MockIndex) GetPositionOf(arg0 string) (int64, bool) {
	ret := m.ctrl.Call(m, "GetPositionOf", arg0)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetPositionOf indicates an expected call of GetPositionOf
func (mr *MockIndexMockRecorder) GetPositionOf(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPositionOf", reflect.TypeOf((*MockIndex)(nil).GetPositionOf), arg0)
}

// IndexDocumentPosition mocks base method
func (m *MockIndex) IndexDocumentPosition(arg0 string, arg1 int64) error {
	ret := m.ctrl.Call(m, "IndexDocumentPosition", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// IndexDocumentPosition indicates an expected call of IndexDocumentPosition
func (mr *MockIndexMockRecorder) IndexDocumentPosition(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IndexDocumentPosition", reflect.TypeOf((*MockIndex)(nil).IndexDocumentPosition), arg0, arg1)
}

// RemoveDocument mocks base method
func (m *MockIndex) RemoveDocument(arg0 string) {
	m.ctrl.Call(m, "RemoveDocument", arg0)
}

// RemoveDocument indicates an expected call of RemoveDocument
func (mr *MockIndexMockRecorder) RemoveDocument(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveDocument", reflect.TypeOf((*MockIndex)(nil).RemoveDocument), arg0)
}
